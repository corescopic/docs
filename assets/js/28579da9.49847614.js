"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[141],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return m}});var o=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function c(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);n&&(o=o.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,o)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?c(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):c(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function a(e,n){if(null==e)return{};var t,o,r=function(e,n){if(null==e)return{};var t,o,r={},c=Object.keys(e);for(o=0;o<c.length;o++)t=c[o],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var c=Object.getOwnPropertySymbols(e);for(o=0;o<c.length;o++)t=c[o],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var l=o.createContext({}),s=function(e){var n=o.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=s(e.components);return o.createElement(l.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return o.createElement(o.Fragment,{},n)}},d=o.forwardRef((function(e,n){var t=e.components,r=e.mdxType,c=e.originalType,l=e.parentName,u=a(e,["components","mdxType","originalType","parentName"]),d=s(t),m=r,g=d["".concat(l,".").concat(m)]||d[m]||p[m]||c;return t?o.createElement(g,i(i({ref:n},u),{},{components:t})):o.createElement(g,i({ref:n},u))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var c=t.length,i=new Array(c);i[0]=d;var a={};for(var l in n)hasOwnProperty.call(n,l)&&(a[l]=n[l]);a.originalType=e,a.mdxType="string"==typeof e?e:r,i[1]=a;for(var s=2;s<c;s++)i[s]=t[s];return o.createElement.apply(null,i)}return o.createElement.apply(null,t)}d.displayName="MDXCreateElement"},6704:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return a},contentTitle:function(){return l},metadata:function(){return s},toc:function(){return u},default:function(){return d}});var o=t(7462),r=t(3366),c=(t(7294),t(3905)),i=["components"],a={sidebar_position:5},l="Developing Modules",s={unversionedId:"tracking-code/modules/developing-modules",id:"tracking-code/modules/developing-modules",title:"Developing Modules",description:"Developing modules allows you to extend corescopic's functionality easily.",source:"@site/docs/tracking-code/modules/developing-modules.md",sourceDirName:"tracking-code/modules",slug:"/tracking-code/modules/developing-modules",permalink:"/docs/tracking-code/modules/developing-modules",editUrl:"https://github.com/corescopic/docs/edit/main/website/docs/tracking-code/modules/developing-modules.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Tracking SPAs: The hashRouter module",permalink:"/docs/tracking-code/modules/hashrouter"},next:{title:"Tracker JavaScript API",permalink:"/docs/tracking-code/api"}},u=[],p={toc:u};function d(e){var n=e.components,t=(0,r.Z)(e,i);return(0,c.kt)("wrapper",(0,o.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,c.kt)("h1",{id:"developing-modules"},"Developing Modules"),(0,c.kt)("p",null,"Developing modules allows you to extend corescopic's functionality easily."),(0,c.kt)("p",null,"Modules are standalone JavaScript files that will get loaded using special script tag parameter. After being loaded, a module should register with the corescopic tracker to indicate that it functions correctly."),(0,c.kt)("p",null,(0,c.kt)("inlineCode",{parentName:"p"},"module.js:")),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-JavaScript"},"const moduleId = document.currentScript.getAttribute('data-corescopic-module-id');\nconst corescopicName = document.currentScript.getAttribute('data-corescopic-name');\n\nwindow[corescopicName].api.registerModule(moduleId, (config) => {\n  console.log('Module has been set up');\n});\n")),(0,c.kt)("blockquote",null,(0,c.kt)("p",{parentName:"blockquote"},"To stay compatible with the tracker's namespacing feature, ",(0,c.kt)("inlineCode",{parentName:"p"},"window[corescopicName]")," should always be used instead of accessing ",(0,c.kt)("inlineCode",{parentName:"p"},"window.corescopic")," directly")),(0,c.kt)("p",null,"If the module is now loaded with corescopic, this function will be called:"),(0,c.kt)("p",null,(0,c.kt)("inlineCode",{parentName:"p"},"index.html:")),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-HTML"},"<script>\n  window.corescopic = window.corescopic || {};\n  window.corescopic.modules = window.corescopic.modules || [];\n  window.corescopic.modules.push('module.js');\n  // -> \"Module has been set up\"\n<\/script>\n")),(0,c.kt)("p",null,"The ",(0,c.kt)("inlineCode",{parentName:"p"},"config")," parameter will be set to the ",(0,c.kt)("inlineCode",{parentName:"p"},"config")," object is one is provided during load, otherwise it will be ",(0,c.kt)("inlineCode",{parentName:"p"},"undefined"),":"),(0,c.kt)("p",null,(0,c.kt)("inlineCode",{parentName:"p"},"module.js:")),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-JavaScript"},"const moduleId = document.currentScript.getAttribute('data-corescopic-module-id');\nconst corescopicName = document.currentScript.getAttribute('data-corescopic-name');\n\nwindow[corescopicName].api.registerModule(moduleId, (config) => {\n  // Set up the module here\n  console.log('Config:', config);\n});\n")),(0,c.kt)("p",null,(0,c.kt)("inlineCode",{parentName:"p"},"index.html:")),(0,c.kt)("pre",null,(0,c.kt)("code",{parentName:"pre",className:"language-HTML"},"<script>\n  window.corescopic = window.corescopic || {};\n  window.corescopic.modules = window.corescopic.modules || [];\n  window.corescopic.modules.push({\n    url: 'module.js',\n    config: {\n      your: 'config',\n      is: 'here'\n    }\n  });\n  // -> \"Config: { your: 'config', is: 'here' }\n<\/script>\n")),(0,c.kt)("p",null,"In your module, you may access the current corescopic tracker using ",(0,c.kt)("inlineCode",{parentName:"p"},"window[corescopicName].api"),"."))}d.isMDXComponent=!0}}]);